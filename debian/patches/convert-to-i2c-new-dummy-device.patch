--- a/bsp/modules/x86-64-ufispace-s9700-53dx-optoe.c
+++ b/bsp/modules/x86-64-ufispace-s9700-53dx-optoe.c
@@ -125,6 +125,7 @@
 #include <linux/sysfs.h>
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 #ifdef EEPROM_CLASS
 #include <linux/eeprom_class.h>
@@ -901,7 +902,11 @@ static ssize_t set_dev_class(struct devi
 		/* SFP family */
 		/* if it doesn't exist, create 0x51 i2c address */
 		if (!optoe->client[1]) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,2,0)
+			optoe->client[1] = i2c_new_dummy_device(client->adapter, 0x51);
+#else
 			optoe->client[1] = i2c_new_dummy(client->adapter, 0x51);
+#endif
 			if (!optoe->client[1]) {
 				dev_err(&client->dev,
 					"address 0x51 unavailable\n");
@@ -1136,7 +1141,11 @@ static int optoe_probe(struct i2c_client
 
 	/* SFF-8472 spec requires that the second I2C address be 0x51 */
 	if (num_addresses == 2) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,2,0)
+		optoe->client[1] = i2c_new_dummy_device(client->adapter, 0x51);
+#else
 		optoe->client[1] = i2c_new_dummy(client->adapter, 0x51);
+#endif
 		if (!optoe->client[1]) {
 			dev_err(&client->dev, "address 0x51 unavailable\n");
 			err = -EADDRINUSE;
